apiVersion: apps/v1
kind: Deployment
metadata:
  name: verge
  labels:
    service: verge
    environment: production
spec:
  replicas: {{ .Values.bergen.replicaCount }}
  selector:
    matchLabels:
      service: verge
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: verge
    spec:
      containers:
      - image: jhnnsrs/bergen
        imagePullPolicy: ""
        name: bergen
        resources: {}
        volumeMounts:
          - mountPath: /code/media
            name: media
        env:
          - name: ARNHEIM_DEBUG
            value: {{ .Values.debug | quote }}
          - name: ARNHEIM_LOGGING
            value: {{ .Values.logging | quote }}
          - name: ARNHEIM_DOMAIN
            value: {{ .Values.bergen.domain | quote }}
          - name: ARNHEIM_KEY
            value: {{ .Values.bergen.secret | quote}}
          - name: DJANGO_LOG_LEVEL
            value: "INFO"
          - name: POSTGRES_DB
            value: {{ .Values.postgres.db | quote}}
          - name: POSTGRES_PASSWORD
            value: {{ .Values.postgres.password | quote}}
          - name: POSTGRES_USER
            value: {{ .Values.postgres.user | quote}}
          - name: ARNHEIM_SQL_ENGINE
            value: "django.db.backends.postgresql"
      - image: nginx:latest
        imagePullPolicy: Always
        name: verge
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
        volumeMounts:
          - mountPath: /etc/nginx # mount nginx-conf volumn to /etc/nginx
            readOnly: true
            name: nginx-conf
        resources: {}
      initContainers:
        - name: waitforpostgres
          image: busybox:1.28
          command: ['sh', '-c', "until nslookup postgres.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for postgres; sleep 2; done"]


      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: arnheim-media
        - name: nginx-conf
          configMap:
            name: verge-conf # place ConfigMap `nginx-conf` on /etc/nginx
            items:
              - key: nginx.conf
                path: nginx.conf
status: {}
